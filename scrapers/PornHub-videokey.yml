# Custom fork of PornHub to search by VideoKey
# based on https://github.com/stashapp/CommunityScrapers/commit/43f5b385

name: Pornhub-VideoKey
sceneByName:
  action: scrapeXPath
  queryURL: https://www.pornhub.com/view_video.php?viewkey={}
  scraper: sceneScraper
sceneByQueryFragment:
  action: scrapeXPath
  queryURL: "{url}"
  scraper: sceneScraper

xPathScrapers:
  sceneScraper:
    common:
      $datablob: //script[contains(., 'VideoObject')]/text()
      $videowrap: //div[@class="video-wrapper"]
    scene:
      Title:
        selector: //meta[@property="og:title"]/@content
        postProcess:
          - replace:
              - regex: '^\s*$'
                with: "Untitled"
              - regex: "&amp;"
                with: "&"
              - regex: "\n"
                with: " "
              - regex: '\si\s'
                with: " I "
      URL: //meta[@property="og:url"]/@content
      Date:
        selector: $datablob
        postProcess:
          - replace:
              - regex: .+(?:"uploadDate"\s*:\s*")([^T]+).+
                with: $1
          - parseDate: "2006-01-02"
      Code:
        selector: //meta[@property="og:url"]/@content
        postProcess:
          - replace:
              - regex: '.+?(\=)'
                with:
      Tags:
        Name:
          selector: //div[contains(concat(" ",normalize-space(@class)," ")," video-actions-tabs ")]//div[contains(concat(" ",normalize-space(@class)," ")," categoriesWrapper ")]//a/text()|//div[contains(concat(" ",normalize-space(@class)," ")," video-actions-tabs ")]//div[contains(concat(" ",normalize-space(@class)," ")," tagsWrapper ")]//a/text()|//div[contains(concat(" ",normalize-space(@class)," ")," video-actions-tabs ")]//div[contains(concat(" ",normalize-space(@class)," ")," productionWrapper ")]//a/text()|//div[contains(concat(" ",normalize-space(@class)," ")," video-actions-tabs ")]//div[contains(concat(" ",normalize-space(@class)," ")," langSpokenWrapper ")]//a/text()|//div[contains(concat(" ",normalize-space(@class)," ")," video-actions-tabs ")]//div[contains(concat(" ",normalize-space(@class)," ")," relatedSearchTermsContainer ")]//a/text()|//div[contains(concat(" ",normalize-space(@class)," ")," userInfo ")]//div[contains(concat(" ",normalize-space(@class)," ")," usernameBadgesWrapper ")]//i/text()
          postProcess:
            - replace:
                - regex: "onlyfans"
                  with: "OnlyFans"
                - regex: "fansly"
                  with: "Fansly"
      Performers:
        Name:
          selector: //div[contains(concat(" ",normalize-space(@class)," ")," video-actions-tabs ")]//span[contains(concat(" ",normalize-space(@class)," ")," usernameBadgesWrapper ")]//a/text()|//div[contains(concat(" ",normalize-space(@class)," ")," video-actions-tabs ")]//span[contains(concat(" ",normalize-space(@class)," ")," pornstarsWrapper ")]//a/text()
          postProcess:
            - replace:
                - regex: '\.'
                  with: " "
                - regex: '\_'
                  with: " "
      Image: //meta[@property="og:image"]/@content
      Studio:
        Name: $videowrap//div[contains(concat(" ",normalize-space(@class)," ")," usernameWrap ")]//a/text()

driver:
  cookies:
    - CookieURL: "https://www.pornhub.com"
      Cookies:
        - Name: "accessAgeDisclaimerPH"
          Domain: ".pornhub.com"
          Value: "1"
          Path: "/"
# Last Updated August 19, 2024
